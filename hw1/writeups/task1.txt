Walk through how you rasterize triangles in your own words.
Naive approach: 
	1) get the bound box of triangle by finding topmost, leftmost, rightmost, and downmost point. 
	2) rearrange the points to be counterclockwise, starting from the leftmost point. 
	3) For each point within the bounding box, sample with triangulation.inside.

Explain how your algorithm is no worse than one that checks each sample within the bounding box of the triangle.
We only visit each pixel once.

Show a png screenshot of basic/test4.svg with the default viewing parameters and with the pixel inspector centered on an interesting part of the scene.


Extra credit: Explain any special optimizations you did beyond simple bounding box triangle rasterization, with a timing comparison table (we suggest using the c++ clock() function around the svg.draw() command in DrawRend::redraw() to compare millisecond timings with your various optimizations off and on).